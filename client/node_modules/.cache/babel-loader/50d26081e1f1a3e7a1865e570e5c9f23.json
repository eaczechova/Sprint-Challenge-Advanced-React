{"ast":null,"code":"var _jsxFileName = \"/Users/ewaczech/Documents/FRONT_END_WEB_DEVELOPMENT/LambdaSchool/Sprint-Challenge-Advanced-React/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport useColors from './hooks/useColors';\nimport axios from 'axios';\n\nconst App = () => {\n  const [players, setPlayers] = useState([]);\n  const [searchInput, setSearchInput] = useState(''); // const fetchPlayers = () => {\n  // \taxios\n  // \t\t.get('http://localhost:5000/api/players')\n  // \t\t.then(res => setPlayers(res.data))\n  // \t\t.catch(err => console.error(err));\n  // };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('http://localhost:5000/api/players');\n      setPlayers(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleChange = e => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleSearch = e => {\n    e.preventDefault();\n    const searchResult = players.filter(player => {\n      if (player.name.toLowerCase().indexOf(searchInput.toLowerCase()) > -1) {\n        return player;\n      }\n    });\n\n    if (searchResult.length > 0) {\n      setPlayers(searchResult);\n    } else {\n      return null;\n    }\n  };\n\n  const [color, setColor] = useColors(false);\n\n  const toggleMode = e => {\n    e.preventDefault();\n    setColor(!color);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, \"List of players\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSearch,\n    \"data-testid\": \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Type name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Toggle color\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: toggleMode,\n    \"data-testid\": \"toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"list-of-players\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, players.length > 0 ? players.map(player => /*#__PURE__*/React.createElement(\"li\", {\n    key: player.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }\n  }, player.name), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  }, \"#\", player.country.toLowerCase()))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"Loading data...\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ewaczech/Documents/FRONT_END_WEB_DEVELOPMENT/LambdaSchool/Sprint-Challenge-Advanced-React/client/src/App.js"],"names":["React","useState","useEffect","useColors","axios","App","players","setPlayers","searchInput","setSearchInput","fetchData","result","data","handleChange","e","target","value","handleSearch","preventDefault","searchResult","filter","player","name","toLowerCase","indexOf","length","color","setColor","toggleMode","map","id","country"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport useColors from './hooks/useColors';\nimport axios from 'axios';\n\nconst App = () => {\n\tconst [players, setPlayers] = useState([]);\n\tconst [searchInput, setSearchInput] = useState('');\n\n\t// const fetchPlayers = () => {\n\t// \taxios\n\t// \t\t.get('http://localhost:5000/api/players')\n\t// \t\t.then(res => setPlayers(res.data))\n\t// \t\t.catch(err => console.error(err));\n\t// };\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await axios('http://localhost:5000/api/players');\n\t\t\tsetPlayers(result.data);\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\tconst handleChange = e => {\n\t\tsetSearchInput(e.target.value);\n\t};\n\n\tconst handleSearch = e => {\n\t\te.preventDefault();\n\t\tconst searchResult = players.filter(player => {\n\t\t\tif (player.name.toLowerCase().indexOf(searchInput.toLowerCase()) > -1) {\n\t\t\t\treturn player;\n\t\t\t}\n\t\t});\n\n\t\tif (searchResult.length > 0) {\n\t\t\tsetPlayers(searchResult);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst [color, setColor] = useColors(false);\n\tconst toggleMode = e => {\n\t\te.preventDefault();\n\t\tsetColor(!color);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>List of players</h1>\n\t\t\t<form onSubmit={handleSearch} data-testid=\"form\">\n\t\t\t\t<input type=\"text\" onChange={handleChange} placeholder=\"Type name...\" />\n\t\t\t\t<button>Search</button>\n\t\t\t\t<label>\n\t\t\t\t\tToggle color\n\t\t\t\t\t<input type=\"checkbox\" onClick={toggleMode} data-testid=\"toggle\" />\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t\t<ul data-testid=\"list-of-players\">\n\t\t\t\t{players.length > 0 ? (\n\t\t\t\t\tplayers.map(player => (\n\t\t\t\t\t\t<li key={player.id}>\n\t\t\t\t\t\t\t<p>{player.name}</p>\n\t\t\t\t\t\t\t<a href=\"#\">#{player.country.toLowerCase()}</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading data...</p>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}