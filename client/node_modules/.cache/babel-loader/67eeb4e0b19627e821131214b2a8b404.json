{"ast":null,"code":"var _jsxFileName = \"/Users/ewaczech/Documents/FRONT_END_WEB_DEVELOPMENT/LambdaSchool/Sprint-Challenge-Advanced-React/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport useColors from './hooks/useColors';\nimport axios from 'axios';\n\nconst App = () => {\n  const [players, setPlayers] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n\n  const fetchPlayers = () => {\n    axios.get('http://localhost:5000/api/players').then(res => setPlayers(res.data)).catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const handleChange = e => {\n    setSearchInput(e.target.value);\n    console.log(searchInput);\n  };\n\n  const handleSearch = e => {\n    e.preventDefault();\n    let searchResult = players.filter(player => {\n      console.log(player.name.indexOf(searchInput));\n\n      if (player.name.toLowerCase().indexOf(searchInput.toLowerCase()) > -1) {\n        return player;\n      }\n    });\n\n    if (searchResult.length > 0) {\n      setPlayers({ ...searchResult\n      });\n    } else {\n      return null;\n    }\n  };\n\n  const [color, setColor] = useColors(false);\n\n  const toggleMode = e => {\n    e.preventDefault();\n    setColor(!color);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, \"List of players\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSearch,\n    \"data-testid\": \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Type name...\" // value={newTeamMember.name}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"Toggle color\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: toggleMode,\n    \"data-testid\": \"toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"list-of-players\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, players.length > 0 ? players.map(player => /*#__PURE__*/React.createElement(\"li\", {\n    key: player.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, player.name), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, \"#\", player.country.toLowerCase()))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, \"Loading data...\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ewaczech/Documents/FRONT_END_WEB_DEVELOPMENT/LambdaSchool/Sprint-Challenge-Advanced-React/client/src/App.js"],"names":["React","useState","useEffect","useColors","axios","App","players","setPlayers","searchInput","setSearchInput","fetchPlayers","get","then","res","data","catch","err","console","error","handleChange","e","target","value","log","handleSearch","preventDefault","searchResult","filter","player","name","indexOf","toLowerCase","length","color","setColor","toggleMode","map","id","country"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport useColors from './hooks/useColors';\nimport axios from 'axios';\n\nconst App = () => {\n\tconst [players, setPlayers] = useState([]);\n\tconst [searchInput, setSearchInput] = useState('');\n\n\tconst fetchPlayers = () => {\n\t\taxios\n\t\t\t.get('http://localhost:5000/api/players')\n\t\t\t.then(res => setPlayers(res.data))\n\t\t\t.catch(err => console.error(err));\n\t};\n\n\tuseEffect(() => {\n\t\tfetchPlayers();\n\t}, []);\n\n\tconst handleChange = e => {\n\t\tsetSearchInput(e.target.value);\n\t\tconsole.log(searchInput);\n\t};\n\n\tconst handleSearch = e => {\n\t\te.preventDefault();\n\n\t\tlet searchResult = players.filter(player => {\n\t\t\tconsole.log(player.name.indexOf(searchInput));\n\t\t\tif (player.name.toLowerCase().indexOf(searchInput.toLowerCase()) > -1) {\n\t\t\t\treturn player;\n\t\t\t}\n\t\t});\n\n\t\tif (searchResult.length > 0) {\n\t\t\tsetPlayers({ ...searchResult });\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst [color, setColor] = useColors(false);\n\tconst toggleMode = e => {\n\t\te.preventDefault();\n\t\tsetColor(!color);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>List of players</h1>\n\t\t\t<form onSubmit={handleSearch} data-testid=\"form\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tplaceholder=\"Type name...\"\n\t\t\t\t\t// value={newTeamMember.name}\n\t\t\t\t/>\n\t\t\t\t<button>Search</button>\n\t\t\t\t<label>\n\t\t\t\t\tToggle color\n\t\t\t\t\t<input type=\"checkbox\" onClick={toggleMode} data-testid=\"toggle\" />\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t\t<ul data-testid=\"list-of-players\">\n\t\t\t\t{players.length > 0 ? (\n\t\t\t\t\tplayers.map(player => (\n\t\t\t\t\t\t<li key={player.id}>\n\t\t\t\t\t\t\t<p>{player.name}</p>\n\t\t\t\t\t\t\t<a href=\"#\">#{player.country.toLowerCase()}</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading data...</p>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}